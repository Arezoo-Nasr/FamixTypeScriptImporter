@startuml
!include skins.include.puml
class Entity extends FamixBaseElement {
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class SourceLanguage extends Entity {
    -sourcedEntities: Set<SourcedEntity>
    +getSourcedEntities(): Set<SourcedEntity>
    +addSourcedEntity(sourcedEntity: SourcedEntity): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class Comment extends SourcedEntity {
    -commentContainer: SourcedEntity
    +getContainer(): SourcedEntity
    +setContainer(commentContainer: SourcedEntity): void
    -commentContent: string
    +getContent(): string
    +setContent(commentContent: string): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class SourceAnchor extends Entity {
    -element: SourcedEntity
    +getElement(): SourcedEntity
    +setElement(element: SourcedEntity): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class SourcedEntity extends Entity {
    -isStub: boolean
    +getIsStub(): boolean
    +setIsStub(isStub: boolean): void
    -sourceAnchor: SourceAnchor
    +getSourceAnchor(): SourceAnchor
    +setSourceAnchor(sourceAnchor: SourceAnchor): void
    -comments: Set<Comment>
    +getComments(): Set<Comment>
    +addComment(comments: Comment): void
    -declaredSourceLanguage: SourceLanguage
    +getDeclaredSourceLanguage(): SourceLanguage
    +setDeclaredSourceLanguage(declaredSourceLanguage: SourceLanguage): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class Association extends SourcedEntity {
    -associationNext: Association
    +getNext(): Association
    +setNext(associationNext: Association): void
    -associationPrevious: Association
    +getPrevious(): Association
    +setPrevious(associationPrevious: Association): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class Namespace extends ScopingEntity {
    -parentScope: ScopingEntity
    +getParentScope(): ScopingEntity
    +setParentScope(parentScope: ScopingEntity): void
    -numberOfAttributes: number
    +getNumberOfAttributes(): number
    +setNumberOfAttributes(numberOfAttributes: number): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class ScopingEntity extends ContainerEntity {
    -childrenNamespaces: Set<Namespace>
    +getNamespaces(): Set<Namespace>
    +addNamespace(childNamespace: Namespace): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class ScriptEntity extends ScopingEntity {
    -numberOfLinesOfText: number
    +getNumberOfLinesOfText(): number
    +setNumberOfLinesOfText(numberOfLinesOfText: number): void
    -numberOfCharacters: number
    +getNumberOfCharacters(): number
    +setNumberOfCharacters(numberOfCharacters: number): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class Module extends ScriptEntity {
    -importClauses: Set<ImportClause>
    +getImportClauses(): Set<ImportClause>
    +addImportClause(importClause: ImportClause): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class ImportClause extends Association {
    -importer: Module
    +getImporter(): Module
    +setImporter(importer: Module): void
    -importedEntity: NamedEntity
    +getImportedEntity(): NamedEntity
    +setImportedEntity(importedEntity: NamedEntity): void
    -moduleSpecifier: string
    +getModuleSpecifier(): string
    +setModuleSpecifier(moduleSpecifier: string): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class Alias extends NamedEntity {
    -aliasedEntity: NamedEntity
    +getAliasedEntity(): NamedEntity
    +setAliasedEntity(aliasedEntity: NamedEntity): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class Decorator extends NamedEntity {
    -decoratedEntity: NamedEntity
    +getDecoratedEntity(): NamedEntity
    +setDecoratedEntity(decoratedEntity: NamedEntity): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class NamedEntity extends SourcedEntity {
    -fullyQualifiedName: string
    +getFullyQualifiedName(): string
    +setFullyQualifiedName(fullyQualifiedName: string): void
    -receivedInvocations: Set<Invocation>
    +getReceivedInvocations(): Set<Invocation>
    +addReceivedInvocation(receivedInvocation: Invocation): void
    -imports: Set<ImportClause>
    +getImports(): Set<ImportClause>
    +addImport(anImport: ImportClause): void
    -name: string
    +getName(): string
    +setName(name: string): void
    -aliases: Set<Alias>
    +getAliases(): Set<Alias>
    +addAlias(alias: Alias): void
    -decorators: Set<Decorator>
    +getDecorators(): Set<Decorator>
    +addDecorator(decorator: Decorator): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class Parameter extends StructuralEntity {
    -parentEntity: BehavioralEntity
    +getParentEntity(): BehavioralEntity
    +setParentEntity(newParentBehavioralEntity: BehavioralEntity): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class BehavioralEntity extends ContainerEntity {
    -signature: string
    +getSignature(): string
    +setSignature(signature: string): void
    -parameters: Set<Parameter>
    +getParameters(): Set<Parameter>
    +addParameter(parameter: Parameter): void
    -numberOfParameters: number
    +getNumberOfParameters(): number
    +setNumberOfParameters(numberOfParameters: number): void
    -incomingInvocations: Set<Invocation>
    +getIncomingInvocations(): Set<Invocation>
    +addIncomingInvocation(incomingInvocation: Invocation): void
    -declaredType: Type
    +getDeclaredType(): Type
    +setDeclaredType(declaredType: Type): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class Invocation extends Association {
    -candidates: Set<BehavioralEntity>
    +getCandidates(): Set<BehavioralEntity>
    +addCandidate(candidate: BehavioralEntity): void
    -receiver: NamedEntity
    +getReceiver(): NamedEntity
    +setReceiver(receiver: NamedEntity): void
    -sender: ContainerEntity
    +getSender(): ContainerEntity
    +setSender(sender: ContainerEntity): void
    -signature: string
    +getSignature(): string
    +setSignature(signature: string): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class Reference extends Association {
    -source: ContainerEntity
    +getSource(): ContainerEntity
    +setSource(source: ContainerEntity): void
    -target: Type
    +getTarget(): Type
    +setTarget(target: Type): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class Function extends BehavioralEntity {
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class Variable extends StructuralEntity {
    -parentEntity: ContainerEntity
    +getParentEntity(): ContainerEntity
    +setParentEntity(parentEntity: ContainerEntity): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class ContainerEntity extends NamedEntity {
    -parentContainerEntity: ContainerEntity
    +getParentContainerEntity(): ContainerEntity
    +setParentContainerEntity(parentContainerEntity: ContainerEntity): void
    -childrenContainerEntities: Set<ContainerEntity>
    +getChildrenContainerEntities(): Set<ContainerEntity>
    +addChildContainerEntity(childContainerEntity: ContainerEntity): void
    -cyclomaticComplexity: number
    +getCyclomaticComplexity(): number
    +setCyclomaticComplexity(cyclomaticComplexity: number): void
    -numberOfStatements: number
    +getNumberOfStatements(): number
    +setNumberOfStatements(numberOfStatements: number): void
    -outgoingReferences: Set<Reference>
    +getOutgoingReferences(): Set<Reference>
    +addOutgoingReference(outgoingReference: Reference): void
    -numberOfLinesOfCode: number
    +getNumberOfLinesOfCode(): number
    +setNumberOfLinesOfCode(numberOfLinesOfCode: number): void
    -outgoingInvocations: Set<Invocation>
    +getOutgoingInvocations(): Set<Invocation>
    +addOutgoingInvocation(outgoingInvocation: Invocation): void
    -accesses: Set<Access>
    +getAccesses(): Set<Access>
    +addAccess(access: Access): void
    -childrenTypes: Set<Type>
    +getTypes(): Set<Type>
    +addType(childType: Type): void
    -childrenFunctions: Set<Function>
    +getFunctions(): Set<Function>
    +addFunction(childFunction: Function): void
    -variables: Set<Variable>
    +getVariables(): Set<Variable>
    +addVariable(variable: Variable): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class Type extends ContainerEntity {
    -container: ContainerEntity
    +getContainer(): ContainerEntity
    +setContainer(container: ContainerEntity): void
    -structuresWithDeclaredType: Set<StructuralEntity>
    +getStructuresWithDeclaredType(): Set<StructuralEntity>
    +addStructureWithDeclaredType(structureWithDeclaredType: StructuralEntity): void
    -behavioralEntitiesWithDeclaredType: Set<BehavioralEntity>
    +getBehavioralEntitiesWithDeclaredType(): Set<BehavioralEntity>
    +addBehavioralEntityWithDeclaredType(behavioralEntityWithDeclaredType: BehavioralEntity): void
    -incomingReferences: Set<Reference>
    +getIncomingReferences(): Set<Reference>
    +addIncomingReference(incomingReference: Reference): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class StructuralEntity extends NamedEntity {
    -incomingAccesses: Set<Access>
    +getIncomingAccesses(): Set<Access>
    +addIncomingAccess(incomingAccess: Access): void
    -declaredType: Type
    +getDeclaredType(): Type
    +setDeclaredType(declaredType: Type): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class Access extends Association {
    -accessor: ContainerEntity
    +getAccessor(): ContainerEntity
    +setAccessor(accessor: ContainerEntity): void
    -variable: StructuralEntity
    +getVariable(): StructuralEntity
    +setVariable(variable: StructuralEntity): void
    -accessIsWrite: boolean
    +getIsWrite(): boolean
    +setIsWrite(accessIsWrite: boolean): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class CSourceLanguage extends SourceLanguage {
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class Field extends StructuralEntity {
    -isClassSide: boolean
    +getIsClassSide(): boolean
    +setIsClassSide(isClassSide: boolean): void
    -parentType: Class | Interface
    +getParentEntity(): Class | Interface
    +setParentEntity(parentType: Class | Interface): void
    -modifiers: Set<string>
    +getModifiers(): Set<string>
    +addModifier(modifier: string): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class Inheritance extends Association {
    -superclass: Class | Interface
    +getSuperclass(): Class | Interface
    +setSuperclass(superclass: Class | Interface): void
    -subclass: Class | Interface
    +getSubclass(): Class | Interface
    +setSubclass(subclass: Class | Interface): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class Interface extends Type {
    -isTestCase: boolean
    +getIsTestCase(): boolean
    +setIsTestCase(isTestCase: boolean): void
    -fields: Set<Field>
    +getFields(): Set<Field>
    +addField(field: Field): void
    -methods: Set<Method>
    +getMethods(): Set<Method>
    +addMethod(method: Method): void
    -superInheritances: Set<Inheritance>
    +getSuperInheritances(): Set<Inheritance>
    +addSuperInheritance(superInheritance: Inheritance): void
    -subInheritances: Set<Inheritance>
    +getSubInheritances(): Set<Inheritance>
    +addSubInheritance(subInheritance: Inheritance): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class Method extends BehavioralEntity {
    -parentEntity: Class | Interface
    +getParentEntity(): Class | Interface
    +setParentEntity(parentEntity: Class | Interface): void
    -isAbstract: boolean
    +getIsAbstract(): boolean
    +setIsAbstract(isAbstract: boolean): void
    -isConstructor: boolean
    +getIsConstructor(): boolean
    +setIsConstructor(isConstructor: boolean): void
    -isClassSide: boolean
    +getIsClassSide(): boolean
    +setIsClassSide(isClassSide: boolean): void
    -isPrivate: boolean
    +getIsPrivate(): boolean
    +setIsPrivate(isPrivate: boolean): void
    -isPublic: boolean
    +getIsPublic(): boolean
    +setIsPublic(isPublic: boolean): void
    -isProtected: boolean
    +getIsProtected(): boolean
    +setIsProtected(isProtected: boolean): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class Class extends Type {
    -isTestCase: boolean
    +getIsTestCase(): boolean
    +setIsTestCase(isTestCase: boolean): void
    -isAbstract: boolean
    +getIsAbstract(): boolean
    +setIsAbstract(isAbstract: boolean): void
    -fields: Set<Field>
    +getFields(): Set<Field>
    +addField(field: Field): void
    -methods: Set<Method>
    +getMethods(): Set<Method>
    +addMethod(method: Method): void
    -superInheritances: Set<Inheritance>
    +getSuperInheritances(): Set<Inheritance>
    +addSuperInheritance(superInheritance: Inheritance): void
    -subInheritances: Set<Inheritance>
    +getSubInheritances(): Set<Inheritance>
    +addSubInheritance(subInheritance: Inheritance): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class CustomSourceLanguage extends SourceLanguage {
    -customSourceLanguageName: string
    +getName(): string
    +setName(customSourceLanguageName: string): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class Enum extends Type {
    -enumValues: Set<EnumValue>
    +getValues(): Set<EnumValue>
    +addValue(enumValue: EnumValue): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class EnumValue extends StructuralEntity {
    -parentEntity: Enum
    +getParentEntity(): Enum
    +setParentEntity(parentEntity: Enum): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class ImplicitVariable extends Variable {
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class IndexedFileAnchor extends SourceAnchor {
    -startPos: number
    +getStartPos(): number
    +setStartPos(startPos: number): void
    -endPos: number
    +getEndPos(): number
    +setEndPos(endPos: number): void
    -fileName: string
    +getFileName(): string
    +setFileName(fileName: string): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class ParameterizableInterface extends Interface {
    -parameterizedTypes: Set<ParameterizedType>
    +getParameterizedTypes(): Set<ParameterizedType>
    +addParameterizedType(parameterizedType: ParameterizedType): void
    -parameterTypes: Set<ParameterType>
    +getParameterTypes(): Set<ParameterType>
    +addParameterType(parameterType: ParameterType): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class ParameterizedType extends Type {
    -parentGeneric: ParameterizableInterface | ParameterizableClass
    +getParentGeneric(): ParameterizableInterface | ParameterizableClass
    +setParentGeneric(parentGeneric: ParameterizableInterface | ParameterizableClass): void
    -arguments: Set<Type>
    +getArguments(): Set<Type>
    +addArgument(argument: Type): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class ParameterizableClass extends Class {
    -parameterizedTypes: Set<ParameterizedType>
    +getParameterizedTypes(): Set<ParameterizedType>
    +addParameterizedType(parameterizedType: ParameterizedType): void
    -parameterTypes: Set<ParameterType>
    +getParameterTypes(): Set<ParameterType>
    +addParameterType(parameterType: ParameterType): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class ParameterType extends Type {
    -parentGeneric: ParameterizableInterface | ParameterizableClass
    +getParentGeneric(): ParameterizableInterface | ParameterizableClass
    +setParentGeneric(parentGeneric: ParameterizableInterface | ParameterizableClass): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class PrimitiveType extends Type {
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class TextAnchor extends SourceAnchor {
    -startPos: number
    +getStartPos(): number
    +setStartPos(startPos: number): void
    -endPos: number
    +getEndPos(): number
    +setEndPos(endPos: number): void
    -fileName: string
    +getFileName(): string
    +setFileName(fileName: string): void
    +getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class FamixRepository {
    -elements: Set<FamixBaseElement>
    -famixClasses: Set<Class>
    -famixNamespaces: Set<Namespace>
    -famixMethods: Set<Method>
    -famixFunctions: Set<Function>
    -idCounter: number
    +getFamixEntityById(id: number): FamixBaseElement
    +getFamixEntityByFullyQualifiedName(FullyQualifiedName: string): FamixBaseElement
    +_getAllEntities(): Set<FamixBaseElement>
    +_getAllEntitiesWithType(theType: string): Set<FamixBaseElement>
    +_getFamixClass(name: string): Class
    +_getFamixMethod(name: string): Method
    +_getFamixFunction(name: string): Function
    +_getFamixNamespace(moduleName: string): Namespace
    +_getFamixNamespaces(): Set<Namespace>
    +_methodNamesAsSetFromClass(className: string): Set<string>
    +_methodParentsAsSetFromClass(className: string): Set<Type>
    +_initMapFromModel(model: string): Map<number, any>
    +addElement(element: FamixBaseElement): void
    +getJSON(): string
}
abstract class FamixBaseElement {
    +id: number
    +{abstract} getJSON(): string
    +addPropertiesToExporter(exporter: FamixJSONExporter): void
}
class FamixJSONExporter {
    -element: FamixBaseElement
    -bufferArray: any
    -FamixPrefix: string
    +addProperty(name: string, prop: unknown): void
    +getJSON(): string
}
@enduml